[
    {
        "question": "Which of the following is the correct way to create a variable in Python?",
        "options": [
            "variable x = 5",
            "int x = 5",
            "x = 5",
            "declare x = 5"
        ],
        "answer": "x = 5"
    },
    {
        "question": "How do you create a list in Python?",
        "options": [
            "my_list = {}",
            "my_list = ()",
            "my_list = []",
            "my_list = <>"
        ],
        "answer": "my_list = []"
    },
    {
        "question": "What is the output of the following code: print(2 ** 3)?",
        "options": [
            "5",
            "6",
            "8",
            "9"
        ],
        "answer": "8"
    },
    {
        "question": "How do you start a block of code in Python?",
        "options": [
            "With a colon",
            "With curly braces",
            "With parentheses",
            "With a semicolon"
        ],
        "answer": "With a colon"
    },
    {
        "question": "Which of the following is used to define a block of code in Python?",
        "options": [
            "Indentation",
            "Brackets",
            "Parentheses",
            "Curly braces"
        ],
        "answer": "Indentation"
    },
    {
        "question": "How do you get the length of a list in Python?",
        "options": [
            "len(list)",
            "size(list)",
            "length(list)",
            "count(list)"
        ],
        "answer": "len(list)"
    },
    {
        "question": "Which of the following is the correct way to write a for loop in Python?",
        "options": [
            "for x in y:",
            "for(x in y):",
            "for x in range(y):",
            "for(x, y):"
        ],
        "answer": "for x in y:"
    },
    {
        "question": "What is the correct way to create a dictionary in Python?",
        "options": [
            "my_dict = []",
            "my_dict = {}",
            "my_dict = ()",
            "my_dict = dict()"
        ],
        "answer": "my_dict = {}"
    },
    {
        "question": "What is the output of the following code: print('Hello, World!'[1])?",
        "options": [
            "H",
            "e",
            "l",
            "o"
        ],
        "answer": "e"
    },
    {
        "question": "Which of the following is not a valid variable name in Python?",
        "options": [
            "_var",
            "var_1",
            "1_var",
            "var1"
        ],
        "answer": "1_var"
    },
    {
        "question": "How do you add a comment in Python?",
        "options": [
            "// comment",
            "# comment",
            "<!-- comment -->",
            "/* comment */"
        ],
        "answer": "# comment"
    },
    {
        "question": "How do you create a tuple in Python?",
        "options": [
            "my_tuple = []",
            "my_tuple = {}",
            "my_tuple = ()",
            "my_tuple = <>"
        ],
        "answer": "my_tuple = ()"
    },
    {
        "question": "What is the correct way to create an instance of a class in Python?",
        "options": [
            "object = ClassName()",
            "object = ClassName",
            "object = new ClassName()",
            "object = ClassName.create()"
        ],
        "answer": "object = ClassName()"
    },
    {
        "question": "How do you create a set in Python?",
        "options": [
            "my_set = {}",
            "my_set = set()",
            "my_set = []",
            "my_set = ()"
        ],
        "answer": "my_set = set()"
    },
    {
        "question": "What is the output of the following code: print(10 // 3)?",
        "options": [
            "3.3333333333333335",
            "3",
            "4",
            "3.0"
        ],
        "answer": "3"
    },
    {
        "question": "Which of the following is the correct way to import a module in Python?",
        "options": [
            "include module",
            "import module",
            "use module",
            "require module"
        ],
        "answer": "import module"
    },
    {
        "question": "Which of the following is used to define an anonymous function in Python?",
        "options": [
            "lambda",
            "function",
            "def",
            "anonymous"
        ],
        "answer": "lambda"
    },
    {
        "question": "How do you check the data type of a variable in Python?",
        "options": [
            "typeof(variable)",
            "type(variable)",
            "var_type(variable)",
            "gettype(variable)"
        ],
        "answer": "type(variable)"
    },
    {
        "question": "How do you create a new line in a string in Python?",
        "options": [
            "\\n",
            "\\t",
            "\\r",
            "\\b"
        ],
        "answer": "\\n"
    },
    {
        "question": "Which of the following is the correct way to read a file in Python?",
        "options": [
            "file = open('filename', 'r')",
            "file = read('filename')",
            "file = open('filename', 'read')",
            "file = openfile('filename', 'r')"
        ],
        "answer": "file = open('filename', 'r')"
    },
    {
        "question": "How do you handle exceptions in Python?",
        "options": [
            "try/catch",
            "try/except",
            "try/catch/else",
            "try/handle"
        ],
        "answer": "try/except"
    },
    {
        "question": "Which of the following is the correct way to create a class in Python?",
        "options": [
            "class MyClass:",
            "create class MyClass:",
            "class MyClass()",
            "class: MyClass"
        ],
        "answer": "class MyClass:"
    },
    {
        "question": "What is the output of the following code: print('Hello, World!'.upper())?",
        "options": [
            "HELLO, WORLD!",
            "hello, world!",
            "Hello, World!",
            "HELLO, WORLD"
        ],
        "answer": "HELLO, WORLD!"
    },
    {
        "question": "How do you remove an item from a list in Python?",
        "options": [
            "my_list.delete(item)",
            "my_list.remove(item)",
            "del my_list[item]",
            "my_list.pop(item)"
        ],
        "answer": "my_list.remove(item)"
    },
    {
        "question": "Which of the following is the correct way to create a string in Python?",
        "options": [
            "my_string = 'Hello'",
            "my_string = \"Hello\"",
            "my_string = '''Hello'''",
            "All of the above"
        ],
        "answer": "All of the above"
    },
    {
        "question": "What is the output of the following code: print(bool(0))?",
        "options": [
            "True",
            "False",
            "0",
            "1"
        ],
        "answer": "False"
    },
    {
        "question": "How do you concatenate strings in Python?",
        "options": [
            "string1 + string2",
            "string1 & string2",
            "string1 | string2",
            "string1 - string2"
        ],
        "answer": "string1 + string2"
    },
    {
        "question": "Which of the following is the correct way to create a generator in Python?",
        "options": [
            "def generator_func(): yield",
            "def generator_func(): return",
            "def generator_func(): produce",
            "def generator_func(): give"
        ],
        "answer": "def generator_func(): yield"
    },
    {
        "question": "How do you access elements in a list in Python?",
        "options": [
            "list[index]",
            "list{index}",
            "list(index)",
            "list.index"
        ],
        "answer": "list[index]"
    },
    {
        "question": "Which of the following is not a built-in data type in Python?",
        "options": [
            "list",
            "tuple",
            "dict",
            "tree"
        ],
        "answer": "tree"
    },
    {
        "question": "What is the output of the following code: print(10 % 3)?",
        "options": [
            "1",
            "3",
            "10",
            "0.3333333333333333"
        ],
        "answer": "1"
    },
    {
        "question": "How do you create a virtual environment in Python?",
        "options": [
            "virtualenv myenv",
            "python -m venv myenv",
            "python createenv myenv",
            "venv create myenv"
        ],
        "answer": "python -m venv myenv"
    },
    {
        "question": "Which of the following is the correct way to install a package using pip?",
        "options": [
            "pip install package",
            "pip add package",
            "pip get package",
            "pip download package"
        ],
        "answer": "pip install package"
    },
    {
        "question": "How do you check the version of Python installed on your system?",
        "options": [
            "python --version",
            "python -v",
            "python version",
            "python --check"
        ],
        "answer": "python --version"
    },
    {
        "question": "What is the output of the following code: print(list('hello'))?",
        "options": [
            "['hello']",
            "['h', 'e', 'l', 'l', 'o']",
            "['h', 'e', 'l', 'o']",
            "['h', 'hello']"
        ],
        "answer": "['h', 'e', 'l', 'l', 'o']"
    },
    {
        "question": "How do you open a file for writing in Python?",
        "options": [
            "open('file.txt', 'w')",
            "open('file.txt', 'r')",
            "open('file.txt', 'a')",
            "open('file.txt', 'x')"
        ],
        "answer": "open('file.txt', 'w')"
    },
    {
        "question": "How do you create an empty set in Python?",
        "options": [
            "set = {}",
            "set = set()",
            "set = []",
            "set = ()"
        ],
        "answer": "set = set()"
    },
    {
        "question": "Which of the following is used to create an alias for a module in Python?",
        "options": [
            "import module as alias",
            "import module alias",
            "alias module as alias",
            "module alias = alias"
        ],
        "answer": "import module as alias"
    },
    {
        "question": "How do you remove whitespace from the beginning and end of a string in Python?",
        "options": [
            "string.strip()",
            "string.remove()",
            "string.delete()",
            "string.rstrip()"
        ],
        "answer": "string.strip()"
    },
    {
        "question": "What is the output of the following code: print(5 > 3)?",
        "options": [
            "True",
            "False",
            "5",
            "3"
        ],
        "answer": "True"
    },
    {
        "question": "How do you handle multiple exceptions in a single except block in Python?",
        "options": [
            "except (Exception1, Exception2):",
            "except Exception1, Exception2:",
            "except [Exception1, Exception2]:",
            "except {Exception1, Exception2}:"
        ],
        "answer": "except (Exception1, Exception2):"
    },
    {
        "question": "What is the output of the following code: print('hello'.capitalize())?",
        "options": [
            "Hello",
            "HELLO",
            "hello",
            "hELLO"
        ],
        "answer": "Hello"
    },
    {
        "question": "How do you check if a key exists in a dictionary in Python?",
        "options": [
            "key in dict",
            "dict.has_key(key)",
            "dict.exists(key)",
            "dict.contains(key)"
        ],
        "answer": "key in dict"
    },
    {
        "question": "Which of the following is the correct way to create a list comprehension in Python?",
        "options": [
            "[x for x in range(10)]",
            "(x for x in range(10))",
            "{x for x in range(10)}",
            "{x: x for x in range(10)}"
        ],
        "answer": "[x for x in range(10)]"
    },
    {
        "question": "What is the output of the following code: print(type([]))?",
        "options": [
            "<class 'list'>",
            "<type 'list'>",
            "<list 'type'>",
            "<list>"
        ],
        "answer": "<class 'list'>"
    },
    {
        "question": "How do you get the keys of a dictionary in Python?",
        "options": [
            "dict.keys()",
            "dict.get_keys()",
            "dict.keylist()",
            "dict.all_keys()"
        ],
        "answer": "dict.keys()"
    },
    {
        "question": "Which of the following is the correct way to iterate over a dictionary in Python?",
        "options": [
            "for key, value in dict.items():",
            "for key in dict:",
            "for key, value in dict:",
            "for key, value in dict.iterate():"
        ],
        "answer": "for key, value in dict.items():"
    },
    {
        "question": "What is the output of the following code: print(bool('False'))?",
        "options": [
            "True",
            "False",
            "None",
            "Error"
        ],
        "answer": "True"
    },
    {
        "question": "How do you merge two dictionaries in Python?",
        "options": [
            "dict1.update(dict2)",
            "dict1 + dict2",
            "dict1.extend(dict2)",
            "dict1.append(dict2)"
        ],
        "answer": "dict1.update(dict2)"
    },
    {
        "question": "What is the output of the following code: print('hello'.find('e'))?",
        "options": [
            "1",
            "2",
            "0",
            "-1"
        ],
        "answer": "1"
    },
    {
        "question": "Which of the following is used to create a set comprehension in Python?",
        "options": [
            "{x for x in range(10)}",
            "(x for x in range(10))",
            "[x for x in range(10)]",
            "{x: x for x in range(10)}"
        ],
        "answer": "{x for x in range(10)}"
    },
    {
        "question": "What is the output of the following code: print('Hello, World!'.lower())?",
        "options": [
            "hello, world!",
            "HELLO, WORLD!",
            "Hello, World!",
            "hello, world"
        ],
        "answer": "hello, world!"
    },
    {
        "question": "How do you create a dictionary with default values in Python?",
        "options": [
            "from collections import defaultdict",
            "from collections import defaultdict",
            "from collections import dict",
            "from collections import orderedDict"
        ],
        "answer": "from collections import defaultdict"
    },
    {
        "question": "Which of the following is the correct way to create a class method in Python?",
        "options": [
            "def method(cls):",
            "def method(self):",
            "def method(class):",
            "def method(cls, self):"
        ],
        "answer": "def method(cls):"
    },
    {
        "question": "How do you create a static method in Python?",
        "options": [
            "def method():",
            "def method(self):",
            "def method(cls):",
            "def method(static):"
        ],
        "answer": "def method():"
    },
    {
        "question": "What is the output of the following code: print([1, 2, 3] * 3)?",
        "options": [
            "[1, 2, 3, 1, 2, 3, 1, 2, 3]",
            "[1, 2, 3, 3]",
            "[1, 1, 2, 2, 3, 3]",
            "[1, 2, 3]"
        ],
        "answer": "[1, 2, 3, 1, 2, 3, 1, 2, 3]"
    },
    {
        "question": "How do you create a string representation of a list in Python?",
        "options": [
            "str(list)",
            "list.str()",
            "list.toString()",
            "list.to_str()"
        ],
        "answer": "str(list)"
    },
    {
        "question": "Which of the following is the correct way to create a subclass in Python?",
        "options": [
            "class SubClass(ParentClass):",
            "class SubClass extends ParentClass:",
            "class SubClass inherits ParentClass:",
            "class SubClass derives ParentClass:"
        ],
        "answer": "class SubClass(ParentClass):"
    },
    {
        "question": "How do you access the superclass of a class in Python?",
        "options": [
            "super()",
            "parent()",
            "base()",
            "root()"
        ],
        "answer": "super()"
    }
]
